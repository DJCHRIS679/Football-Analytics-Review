{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[],"dockerImageVersionId":30698,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"!pip install nfl_data_py","metadata":{"execution":{"iopub.status.busy":"2024-04-26T02:46:34.820992Z","iopub.execute_input":"2024-04-26T02:46:34.821353Z","iopub.status.idle":"2024-04-26T02:46:51.681865Z","shell.execute_reply.started":"2024-04-26T02:46:34.821325Z","shell.execute_reply":"2024-04-26T02:46:51.680781Z"},"trusted":true},"execution_count":5,"outputs":[{"name":"stdout","text":"Collecting nfl_data_py\n  Downloading nfl_data_py-0.3.1.tar.gz (16 kB)\n  Preparing metadata (setup.py) ... \u001b[?25ldone\n\u001b[?25hRequirement already satisfied: pandas>1 in /opt/conda/lib/python3.10/site-packages (from nfl_data_py) (2.2.2)\nRequirement already satisfied: appdirs>1 in /opt/conda/lib/python3.10/site-packages (from nfl_data_py) (1.4.4)\nCollecting fastparquet>0.5 (from nfl_data_py)\n  Downloading fastparquet-2024.2.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (4.1 kB)\nCollecting python-snappy>0.5 (from nfl_data_py)\n  Downloading python_snappy-0.7.1-py3-none-any.whl.metadata (1.3 kB)\nRequirement already satisfied: numpy>=1.20.3 in /opt/conda/lib/python3.10/site-packages (from fastparquet>0.5->nfl_data_py) (1.26.4)\nCollecting cramjam>=2.3 (from fastparquet>0.5->nfl_data_py)\n  Downloading cramjam-2.8.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (4.2 kB)\nRequirement already satisfied: fsspec in /opt/conda/lib/python3.10/site-packages (from fastparquet>0.5->nfl_data_py) (2024.2.0)\nRequirement already satisfied: packaging in /opt/conda/lib/python3.10/site-packages (from fastparquet>0.5->nfl_data_py) (21.3)\nRequirement already satisfied: python-dateutil>=2.8.2 in /opt/conda/lib/python3.10/site-packages (from pandas>1->nfl_data_py) (2.9.0.post0)\nRequirement already satisfied: pytz>=2020.1 in /opt/conda/lib/python3.10/site-packages (from pandas>1->nfl_data_py) (2023.3.post1)\nRequirement already satisfied: tzdata>=2022.7 in /opt/conda/lib/python3.10/site-packages (from pandas>1->nfl_data_py) (2023.4)\nRequirement already satisfied: six>=1.5 in /opt/conda/lib/python3.10/site-packages (from python-dateutil>=2.8.2->pandas>1->nfl_data_py) (1.16.0)\nRequirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /opt/conda/lib/python3.10/site-packages (from packaging->fastparquet>0.5->nfl_data_py) (3.1.1)\nDownloading fastparquet-2024.2.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.7 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.7/1.7 MB\u001b[0m \u001b[31m23.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m00:01\u001b[0m00:01\u001b[0m\n\u001b[?25hDownloading python_snappy-0.7.1-py3-none-any.whl (8.6 kB)\nDownloading cramjam-2.8.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.0 MB)\n\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.0/2.0 MB\u001b[0m \u001b[31m49.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m:00:01\u001b[0m\n\u001b[?25hBuilding wheels for collected packages: nfl_data_py\n  Building wheel for nfl_data_py (setup.py) ... \u001b[?25ldone\n\u001b[?25h  Created wheel for nfl_data_py: filename=nfl_data_py-0.3.1-py3-none-any.whl size=13182 sha256=98b71ef8baebdf1039c5b48f7ead3b27b6d935cf266f7fd24de5585f9da82d10\n  Stored in directory: /root/.cache/pip/wheels/ca/2e/d2/4def312ac7c070e1c0002e91ecc6923481a86c3ebd5b2c5413\nSuccessfully built nfl_data_py\nInstalling collected packages: cramjam, python-snappy, fastparquet, nfl_data_py\nSuccessfully installed cramjam-2.8.3 fastparquet-2024.2.0 nfl_data_py-0.3.1 python-snappy-0.7.1\n","output_type":"stream"}]},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nimport nfl_data_py as nfl\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-04-26T02:47:18.285701Z","iopub.execute_input":"2024-04-26T02:47:18.286069Z","iopub.status.idle":"2024-04-26T02:47:18.292652Z","shell.execute_reply.started":"2024-04-26T02:47:18.286043Z","shell.execute_reply":"2024-04-26T02:47:18.291451Z"},"trusted":true},"execution_count":7,"outputs":[]},{"cell_type":"code","source":"pbp_py = nfl.import_pbp_data([2021])","metadata":{"execution":{"iopub.status.busy":"2024-04-26T02:48:58.588628Z","iopub.execute_input":"2024-04-26T02:48:58.589027Z","iopub.status.idle":"2024-04-26T02:49:00.415883Z","shell.execute_reply.started":"2024-04-26T02:48:58.588992Z","shell.execute_reply":"2024-04-26T02:49:00.414697Z"},"trusted":true},"execution_count":10,"outputs":[{"name":"stdout","text":"2021 done.\nDowncasting floats.\n","output_type":"stream"}]},{"cell_type":"code","source":"filter_crit = 'play_type == \"pass\" & air_yards.notnull()'","metadata":{"execution":{"iopub.status.busy":"2024-04-26T02:49:53.801746Z","iopub.execute_input":"2024-04-26T02:49:53.802148Z","iopub.status.idle":"2024-04-26T02:49:53.806729Z","shell.execute_reply.started":"2024-04-26T02:49:53.802115Z","shell.execute_reply":"2024-04-26T02:49:53.805790Z"},"trusted":true},"execution_count":11,"outputs":[]},{"cell_type":"code","source":"pbp_py_p =(pbp_py.query(filter_crit)\n           .groupby(['passer_id', 'passer'])\n           .agg({'air_yards':['count', 'mean']})\n        )","metadata":{"execution":{"iopub.status.busy":"2024-04-26T02:53:21.091655Z","iopub.execute_input":"2024-04-26T02:53:21.092765Z","iopub.status.idle":"2024-04-26T02:53:21.435438Z","shell.execute_reply.started":"2024-04-26T02:53:21.092718Z","shell.execute_reply":"2024-04-26T02:53:21.434334Z"},"trusted":true},"execution_count":15,"outputs":[]},{"cell_type":"code","source":"pbp_py_p","metadata":{"execution":{"iopub.status.busy":"2024-04-26T02:51:42.840589Z","iopub.execute_input":"2024-04-26T02:51:42.840948Z","iopub.status.idle":"2024-04-26T02:51:42.862473Z","shell.execute_reply.started":"2024-04-26T02:51:42.840921Z","shell.execute_reply":"2024-04-26T02:51:42.861443Z"},"trusted":true},"execution_count":14,"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"                            air_yards           \n                                count       mean\npasser_id  passer                               \n00-0019596 T.Brady                808   7.941832\n00-0022924 B.Roethlisberger       647   6.761978\n00-0023459 A.Rodgers              556   7.730216\n00-0023682 R.Fitzpatrick            6   1.500000\n00-0024417 S.Koch                   1  10.000000\n...                               ...        ...\n00-0036946 K.Mond                   3   0.000000\n00-0036971 T.Lawrence             598   7.913043\n00-0036972 M.Jones                557   7.901257\n00-0037012 T.Lance                 71   9.267606\n00-0037013 Z.Wilson               382   7.565445\n\n[119 rows x 2 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead tr th {\n        text-align: left;\n    }\n\n    .dataframe thead tr:last-of-type th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr>\n      <th></th>\n      <th></th>\n      <th colspan=\"2\" halign=\"left\">air_yards</th>\n    </tr>\n    <tr>\n      <th></th>\n      <th></th>\n      <th>count</th>\n      <th>mean</th>\n    </tr>\n    <tr>\n      <th>passer_id</th>\n      <th>passer</th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>00-0019596</th>\n      <th>T.Brady</th>\n      <td>808</td>\n      <td>7.941832</td>\n    </tr>\n    <tr>\n      <th>00-0022924</th>\n      <th>B.Roethlisberger</th>\n      <td>647</td>\n      <td>6.761978</td>\n    </tr>\n    <tr>\n      <th>00-0023459</th>\n      <th>A.Rodgers</th>\n      <td>556</td>\n      <td>7.730216</td>\n    </tr>\n    <tr>\n      <th>00-0023682</th>\n      <th>R.Fitzpatrick</th>\n      <td>6</td>\n      <td>1.500000</td>\n    </tr>\n    <tr>\n      <th>00-0024417</th>\n      <th>S.Koch</th>\n      <td>1</td>\n      <td>10.000000</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>00-0036946</th>\n      <th>K.Mond</th>\n      <td>3</td>\n      <td>0.000000</td>\n    </tr>\n    <tr>\n      <th>00-0036971</th>\n      <th>T.Lawrence</th>\n      <td>598</td>\n      <td>7.913043</td>\n    </tr>\n    <tr>\n      <th>00-0036972</th>\n      <th>M.Jones</th>\n      <td>557</td>\n      <td>7.901257</td>\n    </tr>\n    <tr>\n      <th>00-0037012</th>\n      <th>T.Lance</th>\n      <td>71</td>\n      <td>9.267606</td>\n    </tr>\n    <tr>\n      <th>00-0037013</th>\n      <th>Z.Wilson</th>\n      <td>382</td>\n      <td>7.565445</td>\n    </tr>\n  </tbody>\n</table>\n<p>119 rows × 2 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}